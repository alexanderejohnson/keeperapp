{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","isExpanded","setExpanded","note","setNote","handleChange","event","target","name","value","prevNote","onChange","placeholder","rows","Zoom","in","Fab","onAdd","preventDefault","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","map","key","ReactDOM","render","document","getElementById"],"mappings":"+NASeA,MANf,WACI,OAAO,gCACH,4BAAI,kBAAC,IAAD,MAAJ,YCOOC,MAVf,WACI,OACI,gCACA,8CAAgB,IAAIC,MAAOC,cAA3B,mB,iBCcOC,MAhBf,SAAcC,GAKV,OACI,yBAAKC,UAAU,QACX,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QARhB,WACIJ,EAAMK,SAASL,EAAMM,MAQb,kBAAC,IAAD,S,iDCsDDC,MA9Df,SAAoBP,GAAQ,IAAD,EAEWQ,oBAAS,GAFpB,mBAEhBC,EAFgB,KAEJC,EAFI,OAICF,mBAAS,CAC9BN,MAAO,GACPC,QAAS,KANW,mBAIhBQ,EAJgB,KAIVC,EAJU,KAUvB,SAASC,EAAaC,GAAQ,IAAD,EACLA,EAAMC,OAArBC,EADoB,EACpBA,KAAMC,EADc,EACdA,MAEbL,GAAQ,SAAAM,GACJ,OAAO,eACAA,EADP,eAEKF,EAAOC,OAmBlB,OACI,6BACI,0BAAMhB,UAAU,eACZQ,EAAa,2BACbO,KAAK,QACLG,SAAUN,EACVI,MAAON,EAAKT,MACZkB,YAAY,UACP,KACL,8BACAJ,KAAK,UACLZ,QAfZ,WACIM,GAAY,IAeJS,SAAUN,EACVI,MAAON,EAAKR,QACZiB,YAAY,iBACZC,KAAMZ,EAAa,EAAI,IAEvB,kBAACa,EAAA,EAAD,CAAMC,GAAId,GACN,kBAACe,EAAA,EAAD,CAAKpB,QAhCrB,SAAoBU,GAChBd,EAAMyB,MAAMd,GACZC,EAAQ,CACJV,MAAO,GACPC,QAAS,KAEbW,EAAMY,mBA2BM,kBAAC,IAAD,WCbLC,MAvCf,WAAgB,IAAD,EACenB,mBAAS,IADxB,mBACJoB,EADI,KACGC,EADH,KAWX,SAASC,EAAWxB,GAChBuB,GAAS,SAAAE,GACL,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GAC/B,OAAOA,IAAU5B,QAK7B,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYmB,MAlBpB,SAAiBU,GACbN,GAAS,SAAAE,GACL,MAAM,GAAN,mBAAWA,GAAX,CAAsBI,UAiBrBP,EAAMQ,KAAI,SAACH,EAAUC,GAClB,OACI,kBAAC,EAAD,CACAG,IAAKH,EACL5B,GAAI4B,EACJhC,MAAO+B,EAAS/B,MAChBC,QAAS8B,EAAS9B,QAClBE,SAAUyB,OAIlB,kBAAC,EAAD,QCrCZQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fea42f0f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport HighlightIcon from '@material-ui/icons/Highlight';\r\n\r\nfunction Header() {\r\n    return <header>\r\n        <h1><HighlightIcon />Keeper</h1>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n        <p>Copyright Â© {new Date().getFullYear()} Alex Johnson</p>\r\n        </footer>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction Note(props) {\r\n    function handleClick() {\r\n        props.onDelete(props.id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"note\">\r\n            <h1>{props.title}</h1>\r\n            <p>{props.content}</p>\r\n            <button onClick={handleClick}>\r\n                <DeleteIcon />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Note;","import React, { useState } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction CreateArea(props) {\r\n\r\n    const [isExpanded, setExpanded] = useState(false);\r\n\r\n    const [note, setNote] = useState({\r\n       title: \"\",\r\n       content: \"\"\r\n    });\r\n\r\n\r\n    function handleChange(event) {\r\n      const {name, value} = event.target;\r\n\r\n      setNote(prevNote => {\r\n          return {\r\n              ...prevNote,\r\n              [name]: value\r\n          };    \r\n      });\r\n    }\r\n\r\n    function submitNote(event) {\r\n        props.onAdd(note);\r\n        setNote({\r\n            title: \"\",\r\n            content: \"\"\r\n        });\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    function expand() {\r\n        setExpanded(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"create-note\">\r\n               {isExpanded ? <input \r\n                name=\"title\" \r\n                onChange={handleChange} \r\n                value={note.title} \r\n                placeholder=\"Title\" \r\n                /> : null}\r\n                <textarea \r\n                name=\"content\" \r\n                onClick={expand}\r\n                onChange={handleChange} \r\n                value={note.content} \r\n                placeholder=\"Take a note...\" \r\n                rows={isExpanded ? 3 : 1}\r\n                />\r\n                <Zoom in={isExpanded}>\r\n                    <Fab onClick={submitNote}>\r\n                    <AddIcon />\r\n                    </Fab>\r\n                </Zoom>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateArea;","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport CreateArea from \"./CreateArea\";\r\n\r\n\r\nfunction App() {\r\n    const [notes, setNotes] = useState([]);\r\n\r\n\r\n    function addNote(newNote) {\r\n        setNotes(prevNotes => {\r\n            return [...prevNotes, newNote];\r\n        });\r\n        \r\n    }\r\n\r\n    function deleteNote(id) {\r\n        setNotes(prevNotes => {\r\n            return prevNotes.filter((noteItem, index) => {\r\n                return index !== id;\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <CreateArea onAdd={addNote} />\r\n            {notes.map((noteItem, index) => {\r\n                return (\r\n                    <Note\r\n                    key={index}\r\n                    id={index}\r\n                    title={noteItem.title}\r\n                    content={noteItem.content}\r\n                    onDelete={deleteNote}\r\n                    />\r\n                );\r\n            })}\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n\n"],"sourceRoot":""}